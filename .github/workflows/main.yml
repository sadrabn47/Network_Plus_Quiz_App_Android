# نام Workflow
name: EAS Build Android APK

# زمان‌هایی که Workflow اجرا می‌شود
on:
  push:
    branches:
      - master # چون شاخه شما master است، اینجا را master قرار دهید

# شغل‌ها (Jobs)
jobs:
  build:
    # سیستم عامل برای اجرای شغل
    runs-on: ubuntu-latest

    # تنظیم متغیرهای محیطی برای کل شغل
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }} # توکن EAS را از GitHub Secrets به عنوان متغیر محیطی تنظیم می‌کند

    # مراحل (Steps) شغل
    steps:
      # ۱. Checkout کردن کد مخزن
      - name: Checkout repository
        uses: actions/checkout@v4

      # ۲. تنظیم Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x # از نسخه Node.js مناسب برای پروژه خود استفاده کنید (معمولا 18.x یا 20.x)

      # ۳. نصب Expo CLI و EAS CLI
      - name: Install Expo CLI and EAS CLI
        run: npm install -g expo-cli eas-cli

      # ۴. نصب وابستگی‌های پروژه
      - name: Install project dependencies
        run: npm install

      # ۵. ساخت فایل APK برای اندروید
        # EAS CLI به طور خودکار EXPO_TOKEN را از متغیرهای محیطی تشخیص می‌دهد.
        # --local false حذف شد، چون پیش‌فرض ساخت روی سرورهای EAS است.
      - name: Build Android APK
        run: eas build --platform android --non-interactive

      # ۶. (اختیاری) نمایش لینک دانلود APK در خروجی
      # EAS CLI به طور خودکار لینک دانلود را در انتهای اجرای eas build نمایش می‌دهد.
      # این مرحله فقط برای اطمینان از نمایش آن در لاگ‌های GitHub Actions است.
      - name: Get build URL
        run: |
          echo "Please check the logs of the 'Build Android APK' step for the download link."
          echo "The link will look something like: https://expo.dev/artifacts/..."